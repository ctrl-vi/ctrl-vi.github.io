---
import "./ContactForm.css";
---

<script>
    var nameInput;
    window.addEventListener("load", () => {
        // Add a popup to the top of the form if submission
        const params = new URLSearchParams(document.location.search);
        const value = params.get("redirect");
        if (value) {
            const element = document.getElementById("notification");
            if (element && value === "true") {
                element.outerHTML = `
                 <div class="alert">
                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                    Your message has been sent! :O
                </div> 
                `;
            }
            history.replaceState(null, "", window.location.pathname);
        }

        // Name input validation
        nameInput = document.getElementById("name");
        if (nameInput == null) {
            return;
        }
        nameInput.addEventListener("blur", validateName);

        // Phone input validation
        const phoneInput = document.getElementById("phone");
        if (phoneInput == null) {
            return;
        }
        phoneInput.addEventListener("keydown", disallowNonNumericInput);
        phoneInput.addEventListener("blur", validateNumber);

        // Email input validation
        const emailInput = document.getElementById("email");
        if (emailInput == null) {
            return;
        }
        emailInput.addEventListener("blur", validateEmail);

        // Message validation
        const messageInput = document.getElementById("message");
        if (messageInput == null) {
            return;
        }
        messageInput.addEventListener("blur", validateMessage);
    });

    const validateName = (evt: Event) => {
        const input = evt.target as HTMLInputElement | null;
        if (!input) {
            return;
        }
        if (!/^[A-Za-z]+ [A-Za-z]+$/.test(input.value)) {
            input.setCustomValidity("Please enter your first and last name");
            input.classList.add("invalid");
        } else {
            input.setCustomValidity("");
            input.classList.remove("invalid");
        }
        input.reportValidity();
    };

    const disallowNonNumericInput = (evt: KeyboardEvent) => {
        // If it's a tab out, or if
        if (evt.key !== "Tab") {
            // Otherwise, prevent it
            evt.preventDefault();
        }
        // Don't let the event actually occur

        const input = evt.target as HTMLInputElement;

        // If the key is delete, delete 1 char
        if (evt.key === "Backspace") {
            input.value = input.value.substring(0, input.value.length - 1);
        }

        // If the key is a number, append, or if it's a correct hyphen/dot
        if (
            /[0-9.-]/.test(evt.key) ||
            (/[.\-]/.test(evt.key) &&
                (input.value.length == 3 || input.value.length == 6))
        ) {
            input.value += evt.key;
        }

        const digits = input.value.replace(/\D/g, "").substring(0, 10);
        const areaCode = digits.substring(0, 3);
        const prefix = digits.substring(3, 6);
        const suffix = digits.substring(6, 10);

        // If any hyphen/dot was already added, let it
        if (input.value.length > 7) {
            input.value = `${areaCode}-${prefix}-${suffix}`;
        } else if (input.value.length > 3) {
            input.value = `${areaCode}-${prefix}`;
        } else {
            input.value = `${areaCode}`;
        }
    };

    const validateNumber = (evt: Event) => {
        const input = evt.target as HTMLInputElement | null;
        if (!input) {
            return;
        }

        if (
            input.value.length == 0 ||
            /^[0-9]{3}-[0-9]{3}-[0-9]{4}$/.test(input.value)
        ) {
            input.setCustomValidity("");
            input.classList.remove("invalid");
        } else {
            input.setCustomValidity("Please enter a valid phone number");
            input.classList.add("invalid");
        }
        input.reportValidity();
    };

    const validateEmail = (evt: Event) => {
        const input = evt.target as HTMLInputElement | null;
        if (!input) {
            return;
        }

        if (input.checkValidity()) {
            input.classList.remove("invalid");
        } else {
            input.classList.add("invalid");
        }
        input.reportValidity();
    };

    const validateMessage = (evt: Event) => {
        const input = evt.target as HTMLInputElement | null;
        if (!input) {
            return;
        }

        if (input.value.trim()) {
            input.setCustomValidity("");
            input.classList.remove("invalid");
        } else {
            input.setCustomValidity("Please enter a message");
            input.classList.add("invalid");
        }
        input.reportValidity();
    };
</script>
<div id="notification"></div>
<form
    id="contact-form"
    action="https://forms.un-static.com/forms/045fb9fada23e0a37628ddb818fc21bb70590de6"
    method="POST"
>
    <label for="name">Name (first and last)*:</label>
    <input
        id="name"
        type="text"
        name="name"
        placeholder="Violet Monserate"
        pattern="^[A-Za-z]+ [A-Za-z]+$"
        required
    />
    <label for="phone">Phone:</label>
    <input
        id="phone"
        type="tel"
        name="phone"
        placeholder="123-456-7890"
        pattern="^[0-9]{3}-[0-9]{3}-[0-9]{4}$"
        maxlength="12"
        size="12"
    />
    <label for="email">Email:</label>
    <input id="email" type="email" name="email" placeholder="Email" />
    <label for="message">Message*:</label>

    <input
        id="message"
        type="text"
        name="message"
        placeholder="I think you're cool :)"
        required
    />
    <input class="submit" type="submit" value="Send Message" />
</form>
